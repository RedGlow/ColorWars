<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:ColorWars.View" x:Name="ArrowControlParent" x:Class="ColorWars.View.ArrowControl" 
    xmlns:converters="clr-namespace:ColorWars.View.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d" 
    d:DesignHeight="900" d:DesignWidth="900" DataContext="{Binding Arrow0, Mode=OneWay, Source={StaticResource Arrows}}" Background="#007E6666">
    <UserControl.Resources>
        <converters:BooleanAlternationConverter x:Key="AlternationConverterCircleLeft">
            <converters:BooleanAlternationConverter.FalseValue>
                <sys:Int32>360</sys:Int32>
            </converters:BooleanAlternationConverter.FalseValue>
            <converters:BooleanAlternationConverter.TrueValue>
                <sys:Int32>350</sys:Int32>
            </converters:BooleanAlternationConverter.TrueValue>
        </converters:BooleanAlternationConverter>
        <converters:BooleanAlternationConverter x:Key="AlternationConverterCircleTop">
            <converters:BooleanAlternationConverter.FalseValue>
                <sys:Int32>10</sys:Int32>
            </converters:BooleanAlternationConverter.FalseValue>
            <converters:BooleanAlternationConverter.TrueValue>
                <sys:Int32>0</sys:Int32>
            </converters:BooleanAlternationConverter.TrueValue>
        </converters:BooleanAlternationConverter>
        <converters:BooleanAlternationConverter x:Key="AlternationConverterCircleDiameter">
            <converters:BooleanAlternationConverter.FalseValue>
                <sys:Int32>80</sys:Int32>
            </converters:BooleanAlternationConverter.FalseValue>
            <converters:BooleanAlternationConverter.TrueValue>
                <sys:Int32>100</sys:Int32>
            </converters:BooleanAlternationConverter.TrueValue>
        </converters:BooleanAlternationConverter>
        <converters:BooleanAlternationConverter x:Key="AlternationConverterCircleColor">
            <converters:BooleanAlternationConverter.FalseValue>
                <Color>#7FFFFFFF</Color>
            </converters:BooleanAlternationConverter.FalseValue>
            <converters:BooleanAlternationConverter.TrueValue>
                <Color>White</Color>
            </converters:BooleanAlternationConverter.TrueValue>
        </converters:BooleanAlternationConverter>
        <converters:BooleanAlternationConverter x:Key="AlternationConverterCircleRadius">
            <converters:BooleanAlternationConverter.FalseValue>
                <sys:Int32>40</sys:Int32>
            </converters:BooleanAlternationConverter.FalseValue>
            <converters:BooleanAlternationConverter.TrueValue>
                <sys:Int32>50</sys:Int32>
            </converters:BooleanAlternationConverter.TrueValue>
        </converters:BooleanAlternationConverter>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <UserControl.Visibility>
        <Binding Converter="{StaticResource BooleanToVisibilityConverter}" Mode="OneWay" Path="Enabled"/>
    </UserControl.Visibility>
    <Grid x:Name="InternalImage"
          Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ArrowControl}}}"
          Height="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ArrowControl}}}"
          RenderTransformOrigin="0.5,0.5">
        <Grid.RowDefinitions>
            <RowDefinition Height="400*"/>
            <RowDefinition Height="100*"/>
            <RowDefinition Height="400*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450*"/>
            <ColumnDefinition Width="450*"/>
        </Grid.ColumnDefinitions>
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform ScaleX="{Binding NormalizedLength}" ScaleY="{Binding NormalizedLength}"/>
                <SkewTransform/>
                <RotateTransform Angle="{Binding Angle}"/>
                <TranslateTransform/>
            </TransformGroup>
        </Grid.RenderTransform>
        <Viewbox Stretch="Fill" Grid.Column="1" Grid.Row="1">
            <Canvas x:Name="colorCircleCanvas" Width="450" Height="100" Background="Transparent">
                <Path Fill="#7F8C8C8C"
                      DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ArrowControl}}}">
                    <Path.Data>
                        <CombinedGeometry GeometryCombineMode="Exclude">
                            <CombinedGeometry.Geometry1>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,50" IsClosed="True">
                                        <LineSegment Point="400,10"/>
                                        <LineSegment Point="400,90"/>
                                    </PathFigure>
                                </PathGeometry>
                            </CombinedGeometry.Geometry1>
                            <CombinedGeometry.Geometry2>
                                <EllipseGeometry
                                    Center="400,50"
                                    RadiusX="{Binding IsDragging, Converter={StaticResource AlternationConverterCircleRadius}}"
                                    RadiusY="{Binding IsDragging, Converter={StaticResource AlternationConverterCircleRadius}}"
                                    />
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Path.Data>
                </Path>
                <Ellipse 
                    DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ArrowControl}}}"
                    Canvas.Left="{Binding IsDragging, Converter={StaticResource AlternationConverterCircleLeft}}"
                    Canvas.Top="{Binding IsDragging, Converter={StaticResource AlternationConverterCircleTop}}"
                    Width="{Binding IsDragging, Converter={StaticResource AlternationConverterCircleDiameter}}"
                    Height="{Binding IsDragging, Converter={StaticResource AlternationConverterCircleDiameter}}">
                    <Ellipse.Fill>
                        <SolidColorBrush Color="{Binding IsDragging, Converter={StaticResource AlternationConverterCircleColor}}"/>
                    </Ellipse.Fill>
                </Ellipse>
                <Ellipse x:Name="colorCircle" Canvas.Left="370" Canvas.Top="20" Width="60" Height="60">
                    <Ellipse.Fill>
                        <SolidColorBrush Color="{Binding Color}"/>
                    </Ellipse.Fill>
                </Ellipse>
            </Canvas>
        </Viewbox>
    </Grid>
</UserControl>
